node {
def mvnHome

stage('Prepare') {
	git url: 'https://github.com/Chandanabrgowda/devops-infra-groovy-app-1.git', branch: 'master'
	
	mvnHome = tool 'mvn'
}

stage('Build') {
 if (isUnix()){
 
 sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
 } else {
 bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
 }
 
 }
 
 stage('Unit Test') {

	junit '*/target/surefire-reports/TEST-.xml'
	archive 'targer/*.jar' 
}

//stage('Docker Build') {
//if (isUnix()){
 
// sh "'${mvnHome}/bin/mvn' -spring-boot:build-image"
// } else {
 //bat(/"${mvnHome}\bin\mvn" -spring-boot:build-image/)
// }
 
 //}*/
//stage('Docker Build') {
//if (isUnix()){
 
 //sh "'${mvnHome}/bin/mvn' docker-compose-up"
 //} else {
 //bat(/"${mvnHome}\bin\mvn" docker-compose-up /)
 //}
stage('Load Docker Image') {
if (isUnix()){
 
sh "minikube image load Chandanabrgowda/app-products-infra"
 } else {
 bat(/minikube image load Chandanabrgowda/app-products-infra/)
 }
 
 stage('Kubernetes pod') {
if (isUnix()){
 
sh "kubectl apply -f k8s/deployment.yml"
 } else {
 bat("kubectl apply -f k8s/deployment.yml")
 }
 stage('Kubernetes Service') {
if (isUnix()){
 
sh "kubectl apply -f k8s/service.yml"
 } else {
 bat("kubectl apply -f k8s/service.yml")
 }
 

}
